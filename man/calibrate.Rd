% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibrate.R
\name{calibrate}
\alias{calibrate}
\title{Calibration of Computer Models}
\usage{
calibrate(
  sim,
  field,
  Nmcmc = 2200,
  nBurn = 200,
  thinning = 20,
  kappa = list(dist = "beta", init = NA, p1 = 1.1, p2 = 1.1),
  hypers = set_hyperPriors(),
  showProgress = FALSE
)
}
\arguments{
\item{sim}{\eqn{m \times (1+p+q+1)} numeric matrix, representing simulation
data, where m is the number of simulation runs, p is number of
experimental inputs, and q is the number of calibration inputs. The
plus one column represents the response which is the output of the
computer code.}

\item{field}{\eqn{n \times (1+p)} numeric matrix, representing field data, where n
is the number of field observations and p is number of experimental
inputs. Plus one (the first column) represents the field response.}

\item{Nmcmc}{integer for number of MCMC runs.}

\item{nBurn}{integer for number of MCMC burn ins.}

\item{kappa}{list containing following fields to specify the prior distribution
for calibration parameters:
* \code{dist}: string (vector of strings) to specify the prior distribution type(s)
for calibration parameters.
* \code{p1}:   double (vector of doubles) representing the first parameter(s) of the
chosen distribution(s)
* \code{p2}:   double (vector of doubles) representing the first parameter(s) of the
chosen distribution(s)
* \code{init}: double (vector of doubles) that represent initial
value(s) of calibration parameters to start the MCMC.
The default(NA) automates choosing initial value for
calibration parameters based on their range in simulation
data.}

\item{hypers}{nested list containing the priors and initial values for all
hyperparameters. The notation for the list members are explained
below. Each member contains four fields (similar to \code{kappa}): the
distribution type (\code{dist}), the initial value (\code{init}), first
distribution parameter (\code{p1}), and second distribution parameter
(\code{p2}). The default is a call to \code{set_hyperPriors()} without
argument to build the nested list. All arguments of
\code{set_hyperPriors()}. In most cases there is no need to change the
default values. Nevertheless, when needed, user can specify the
prior distribution for any of the model hyperparameters by supplying
the changed arguments and their values.}

\item{showProgress}{logical indicating whether progress must be displayed at console.
Default is False.}

\item{thining}{integer representing sampling frequency of MCMC results to remove
auto-correlation.}
}
\value{
a \code{fbc} object containing:
\itemize{
\item Phi:            A numeric matrix in which each row represents a draw from joint
posterior distribution of parameters (after thinning to remove
autocorrelation between consecutive draws) and each column
represents a parameter of the model. In essence each column
approximates the marginal distribution of that parameter.
\item estimates:      a dataframe containing the summary of estimates of parameters and
their uncertainty
\item logPost:        a numeric vector of same length as Phi rows representing the log of
posterior likelihood
\item priors:         prior specifications of all parameters
\item acceptance:     acceptance rate of MH MCMC algorithm
\item vars:           name of all parameters (based on below notation)
\item cache:          an environment containing original datasets and indexing variables
that is used in \code{predict()} function.
}
}
\description{
\code{calibrate} uses a Bayesian framework to estimate the posterior density distribution of
calibration model parameters. It takes in simulator data, and field data, and parameter
priors as arguments, and forms a numeric joint distribution of all parameters as output.
}
\details{
Both simulation and field data are required to be dataframe or matrix. The first column
in both datasets is the response. In field data rest of columns are experimental inputs
and in simulation data there are additional columns at the end that represent
calibration inputs.

Posterior distribution of a parameters often do not correspond to well-known
distributions. A MCMC algorithm, and especially Metropolis-Hastings (MH)
algorithm with adaptive proposal is used to draw from joint posterior distribution of
parameters. The full Bayesian approach of \code{calibrate} enables both point estimates and
inference about the uncertainty in parameter estimates. More information about
calibration model and package functionality can be found in package vignette.
\subsection{Notation}{

parameters of FBC model include all of calibration parameters and will be
denoted by \eqn{\kappa}. Both simulator and bias-correction processes are modeled
using Gaussian Processes (GP), which in turn are specified with their respective
correlation structures and marginal variances. In this implementation, power
correlation structure is assumed for its flexibility. In summary, model parameters are
calibration parameters (\eqn{\kappa}), simulator GP hyperparameters (marginal variance
\eqn{\sigma^2_S}, scale \eqn{\theta_S}, and smoothness \eqn{\alpha_S}), bias-correction
GP hyperparameters (\eqn{\sigma^2_B}, \eqn{\theta_B}, and \eqn{\alpha_B}), and finally
field measurement error  variance (\eqn{\sigma^2_E}). If calibration parameters have
different initial values, a double vector of same length as number of calibration
inputs (determined internally by subtracting the number of columns in \code{sim} and
\code{field}) can be used.
}
}
\examples{
cal1    <- calibrate(sim = Ds1, field = Df1,
                     Nmcmc = 5, nBurn = 0, thinning = 1,
                     kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)

cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
summary(cal2)
}
\references{
Kennedy MC, O’Hagan A (2001). “Bayesian calibration of computer models.”
\emph{Journal of the Royal Statistical Society}, \strong{Series B}, \strong{63(3)}, 425–464
\url{https://www2.stat.duke.edu/~fei/samsi/Oct_09/bayesian_calibration_of_computer_models.pdf}
}
