ys  <- fnS(Xs)
Df  <- cbind(matrix(yf, ncol = 1), Xf)
Ds  <- cbind(matrix(ys, ncol = 1), Xs)
return(list(Ds = Ds, Df = Df))
}
fnM1 <- function(X) 0.1*(X[,1]^2) - X[1,] + 0.4
fnS1 <- function(X) X[,2]*(X[,1]^2) - 1.3*X[, 1]
D1   <- create_data(n = 5, m = 15, p = 1, q = 1, sdE = 0.8, fnM = fnM1, fnS = fnS1)
Df1  <- D1$Df
Ds1  <- D1$Ds
fnM2 <- function(X) 0.1*(X[,1]^2) + X[, 2]
fnS2 <- function(X) X[, 3] * (X[, 1] ^ 2) + X[, 4] * X[, 2] + 1.1
D2   <- create_data(n = 50, m = 100, p = 1, q = 1, sdE = 0.8, fnM = fnM1, fnS = fnS1)
Df2  <- D2$Df
Ds2  <- D2$Ds
usethis::use_data(Df1)
usethis::use_data(Ds1)
usethis::use_data(Df2)
usethis::use_data(Ds2)
create_data <- function(n, m, p, q, sdE, fnM, fnS, seed = 666) {
set.seed(seed)
Xf  <- lhs::maximinLHS(n, p) * 10 - 5
Xs  <- lhs::maximinLHS(m, p + q)
scl <- c(rep(10, p), rep(4, q))
Xs  <- t(apply(Xs, 1, function(x) x* scl - (scl/2)))
err <- rnorm(n, 0, sdE)
yf  <- fnM(Xf) + err
ys  <- fnS(Xs)
Df  <- cbind(matrix(yf, ncol = 1), Xf)
Ds  <- cbind(matrix(ys, ncol = 1), Xs)
return(list(Ds = Ds, Df = Df))
}
fnM1 <- function(X) 0.1*(X[,1]^2) - X[1,] + 0.4
fnS1 <- function(X) X[,2]*(X[,1]^2) - 1.3*X[, 1]
D1   <- create_data(n = 5, m = 15, p = 1, q = 1, sdE = 0.8, fnM = fnM1, fnS = fnS1)
Df1  <- D1$Df
Ds1  <- D1$Ds
fnM2 <- function(X) 0.1*(X[,1]^2) + X[, 2]
fnS2 <- function(X) X[, 3] * (X[, 1] ^ 2) + X[, 4] * X[, 2] + 1.1
D2   <- create_data(n = 50, m = 100, p = 2, q = 2, sdE = 0.24, fnM = fnM2, fnS = fnS2)
Df2  <- D2$Df
Ds2  <- D2$Ds
usethis::use_data(Df1)
usethis::use_data(Ds1)
usethis::use_data(Df2)
usethis::use_data(Ds2)
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5L, nBurn = 0L, thinning = 1L,
kappa_dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25)
summary(cal1)
cal2    <- calibrate(sim = Ds2, field = Df2)
scale(c(1,2,5), center=4, sd =5)
scale(c(1,2,5), center=4, scale =  =5)
scales(c(1,2,5), center=4, scale =  =5)
scale(c(1,2,5), center=4, scale = 5)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
summary(cal2)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
summary(cal2)
library(FBC)
a <- list(b = "h", g = 90)
b <- list(y = list(b = "h", g = 90), k <- list(b = "h", g = 90))
c <- list(a, b)
c
c <- c(a, b)
c
rm(c)
c <- c(a, b)
c <- c(list(a = a), b)
b <- list(y = list(b = "h", g = 90), k = list(b = "h", g = 90))
c <- c(list(a = a), b)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 200L, nBurn = 0L, thinning = 1L)
cal2    <- calibrate(sim = Ds2, field = Df2)
plot(cal2)
is.double(NA)
is.numeric(NA)
is.numeric(NaN)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
summary(cal2)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
is.double(2L)
is.double(NULL)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
cal1    <- calibrate(sim = Ds1, field = Df1, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
cal1$priors['kappa']['dist']
cal1$priors[['kappa']][['dist']]
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
load_all()
library(FBC)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20L, nBurn = 0L, thinning = 1L)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
library(FBC)
cal1    <- calibrate(sim = Ds1, field = Df1, Nmcmc = 20, nBurn = 0, thinning = 1)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
Df2
Ds2
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
length(NULL)
length(list(a = NULL))
length(NA)
length(list(a = NULL))
load_all()
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1, Nmcmc = 20, nBurn = 0, thinning = 1)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
load_all()
library(FBC)
library(usethis)
library(devtools)
use_test("calibrate")
use_test("correlation")
use_r("correlation")
devtools:::test_coverage()
library(FBC)
devtools:::test_coverage()
library(FBC)
devtools:::test_coverage()
cal$estimates
sum(!is.finite(as.matrix(cal$estimates)))
cal <- calibrate(sim = Ds2, field = Df2, Nmcmc = 10, nBurn = 0, thinning = 1)
sum(!is.finite(as.matrix(cal$estimates)))
!is.finite(as.matrix(cal$estimates))
devtools:::test_coverage()
library(FBC)
devtools:::test_coverage()
library(FBC)
devtools:::test_coverage_active_file()
use_test("predict.fbc.R")
use_test("calibrate")
typeof(preds$pred)
typeof(preds$se)
preds$pred
preds <- predict(cal, newdata = matrix(c(2), nrow = 1), type = "MAP")
library(FBC)
cal <- calibrate(sim = Ds1, field = Df1, Nmcmc = 10, nBurn = 0, thinning = 1)
preds <- predict(cal, newdata = matrix(c(2), nrow = 1), type = "MAP")
preds$pred
Ds1[,1]
Df1[,1]
cal2 <- calibrate(sim = Ds2, field = Df2, Nmcmc = 10, nBurn = 0, thinning = 1)
preds <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
cal1 <- calibrate(sim = Ds1, field = Df1, Nmcmc = 10, nBurn = 0, thinning = 1)
preds <- predict(cal1, newdata = matrix(c(2), nrow = 1), type = "MAP")
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
scale(matrix(c(2,2), nrow=1), center=c(3,4), scale=c(0.5, 4))
load_all()
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
load_all()
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
load_all()
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
cal2 <- calibrate(sim = Ds2, field = Df2, Nmcmc = 10, nBurn = 0, thinning = 1)
cal2$cache$scale$expMin
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
load_all()
cal2 <- calibrate(sim = Ds2, field = Df2, Nmcmc = 10, nBurn = 0, thinning = 1)
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
load_all()
library(FBC)
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
load_all()
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
load_all()
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
load_all()
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
load_all()
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
load_all()
preds2 <- predict(cal2, newdata = matrix(c(2, 2), nrow = 1), type = "MAP")
preds$pred
preds$se
use_test("print.fbc.R")
use_test("summary.fbc.R")
summary(cal)
load_all()
library(FBC)
library(devtools)
load_all()
X     <- matrix(c(1, 3, 5,
2, 2, 6,
1, 4, 1), nrow = 3, byrow = TRUE)
correlation(X, theta = c(1, 2))
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
summary(cal2)
plot(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
cal1$cache$indices["ikappa"]
cal1$cache$indices["ikappa"][[1]]
cal1$cache$indices
dim(Ds1)
head(Ds1)
dim(Ds2)
dim(Df2)
dim(Df1)
cal1$cache$q
ncol(Ds1)
cal1$cache$p
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
summary(cal2)
plot(cal1)
cal1$cache$q
cal1$cache$p
cal2$cache$p
cal4$cache$p
cal2$cache$p
cal2$cache$n
cal2$cache$m
cal1$cache$m
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
plot(cal1)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
summary(cal2)
plot(cal2)
cal1$cache$m
View(cal1)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
summary(cal2)
plot(cal1)
View(cal1)
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
View(cal1)
View(cache)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
View(cache)
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
summary(cal2)
View(cal2)
View(cal1)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
View(cache)
View(cal1)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
class(cal1$cache$sdRates)
typeof(cal1$cache$sdRates)
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
load_all()
plot(cal1)
load_all()
cal1    <- calibrate(sim = Ds1, field = Df1,
Nmcmc = 5, nBurn = 0, thinning = 1,
kappa = list(dist = "gaussian", init = 0.5, p1 = 0.5, p2 = 0.25))
summary(cal1)
View(cal1)
plot(cal1)
load_all()
plot(cal1)
View(cache)
par(mfrow = c(1, 2))
plot(cal1, parameter = "thetaS")
# plot the trace of MCMC draws (useful to determine convergence and stationarity)
par(mfrow = c(1, 2))
plot(cal1, parameter = "alphaS", type = "trace")
plot(cal1, type = "fits")
load_all()
plot(cal1, type = "fits")
load_all()
plot(cal1, type = "fits")
load_all()
plot(cal1, type = "fits")
load_all()
plot(cal1, type = "fits")
load_all()
plot(cal1, type = "fits")
paste0("x", 1:ncol(cal1$data$Xf))
length("x1") != ncol(obj$data$Xf)
length("x1") != ncol(cal1$data$Xf)
length("x1")
load_all()
plot(cal1, type = "fits")
par(mfrow = c(1))
par(mfrow = c(1, 1))
plot(cal1, type = "fits")
plot(cal1)
plot(cal1, type = "fits")
cal2    <- calibrate(sim = Ds2, field = Df2, Nmcmc = 20, nBurn = 0, thinning = 1)
plot(cal2)
typeof(cal1$data)
typeof(cal1$scale)
typeof(cal1$indices)
typeof(cal1$priorFns)
typeof(cal1$proposalSD)
load_all()
use_test("plot.fbc.R")
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
load_all()
tryCatch(1, 4)
tryCatch(1, print(4))
tryCatch(0, print(4))
tryCatch(0, finally = print(4))
a <- tryCatch(0, finally = print(4))
a
a <- tryCatch(1, finally = print(4))
a
load_all()
tryCatch(plot(cal))
tryCatch(plot(cal1))
a <- tryCatch(plot(cal1))
a
load_all()
a <- tryCatch(plot(cal1))
a
try(plot(cal1))
a <- try(plot(cal1))
a
class(a)
load_all()
use_test("summary.fbc.R")
load_all()
s <- set_hyperPriors()
typeof(s$thetaS$init)
1 == 2-1 == 7-6
use_test("set_hyperPriors")
load_all()
set_hyperPriors()
load_all()
set_hyperPriors()
load_all()
set_hyperPriors()
use_test("prior_builder")
load_all()
cal1 <- calibrate(sim=Ds1, field = Df1, Nmcmc=10, nBurn=0, thinning = 1)
cal1$estimates
cal1$acceptance
cal1 <- calibrate(sim=Ds1, field = Df1, Nmcmc=10, nBurn=0, thinning = 1)
cal1$estimates
sum(cal$estimates[, 8] <= 0)
sum(cal1$estimates[, 8] <= 0)
load_all()
s <- set_hyperPriors(alphaS = list(dist = "fixed", init = 2))
load_all()
s <- set_hyperPriors(alphaS = list(dist = "fixed", init = 2))
load_all()
s <- set_hyperPriors(alphaS = list(dist = "fixed", init = 2))
s <- set_hyperPriors(alphaS = list(dist = "fixed", init = 2, p1 = 1, p2 = 1))
cal1 <- calibrate(sim=Ds1, field = Df1, Nmcmc=10, nBurn=0, thinning = 1, hypers = s)
cal1$estimates
load_all()
s <- set_hyperPriors(alphaSDist = "fixed", alphaSInit = 2))
s <- set_hyperPriors(alphaSDist = "fixed", alphaSInit = 2)
cal1 <- calibrate(sim=Ds1, field = Df1, Nmcmc=10, nBurn=0, thinning = 1, hypers = s)
load_all()
library(testthat)
# This file is part of the standard setup for testthat.
# It is recommended that you do not modify it.
#
# Where should you do additional test configuration?
# Learn more about the roles of various files in:
# * https://r-pkgs.org/tests.html
# * https://testthat.r-lib.org/reference/test_package.html#special-files
library(testthat)
library(FBC)
test_check("FBC")
load_all()
k <- c(2, 2, 2, 2, 2, 2, 2)
sd(k)
cal1$estimates
load_all()
cal1$acceptance
load_all()
cal <- calibrate(sim = Ds2, field = Df2, Nmcmc = 15, nBurn = 0, thinning = 1,
kappa = list(dist = c("beta", "uniform"),
init = c(0.5, 0.3),
p1   = c(1.1, 0),
p2   = c(1.1, 1)))
cal <- calibrate(sim = Ds2, field = Df2, Nmcmc = 15, nBurn = 0, thinning = 1,
kappa = list(dist = c("beta", "uniform"),
init = c(0.5, 0.3),
p1   = c(1.1, 0),
p2   = c(1.1, 1)))
load_all()
cal <- calibrate(sim = Ds2, field = Df2, Nmcmc = 15, nBurn = 0, thinning = 1,
kappa = list(dist = c("beta", "uniform"),
init = c(0.5, 0.3),
p1   = c(1.1, 0),
p2   = c(1.1, 1)))
plot(cal)
cal <- calibrate(sim = Ds2, field = Df2, Nmcmc = 15, nBurn = 0, thinning = 1,
kappa = list(dist = c("beta", "uniform"),
init = c(0.5, 0.3),
p1   = c(1.1, 0),
p2   = c(1.1, 1)))
cal$estimates
load_all()
priorFns         <- c(priorFns, prior_builder(prior =  dist[j], p1 = p1[j], p2 = p2[j]))
library(FBC)
replicate(2, prior_builder("uniform", p1 = 0, p2 = 1)
f <- replicate(2, prior_builder("uniform", p1 = 0, p2 = 1)
f <- replicate(2, prior_builder("uniform", p1 = 0, p2 = 1))
f[1](0.5)
f[[1]](0.5)
f[[1]](1)
f[[1]](12)
f <- prior_builder("uniform", p1 = 0, p2 = 1)
f(0.5)
exp(f(0.5))
exp(f(0.75))
exp(f(1.75))
